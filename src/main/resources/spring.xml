<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
 		http://www.springframework.org/schema/beans
 		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
 		http://www.springframework.org/schema/util
 		http://www.springframework.org/schema/util/spring-util-3.2.xsd
 		http://www.springframework.org/schema/aop
 		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">


    <aop:aspectj-autoproxy />
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:client.properties</value>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true" />
        <property name="systemPropertiesMode">
            <util:constant
                    static-field="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer.SYSTEM_PROPERTIES_MODE_OVERRIDE" />
        </property>
    </bean>
    <import resource="loggers.xml"/>
    <util:map id="loggerMap">
        <entry key="INFO" value-ref="eventLogger"/>
        <entry key="ERROR" value-ref="dbLogger"/>
    </util:map>
    <bean id="event" class="com.epam.spring.core.entity.Event" scope="prototype">
        <constructor-arg>
            <bean class="java.util.Date" scope="prototype"/>
        </constructor-arg>
        <constructor-arg ref="dateFormatter"/>
    </bean>
    <bean id="client" class="com.epam.spring.core.entity.Client"  c:id="${id}" c:fullname="${name}" p:greeting="${greeting} + #{systemEnvironment['USERNAME']}"/>
    <bean id="app" class="com.epam.spring.core.App">
        <constructor-arg ref="client"/>
        <constructor-arg ref="loggerMap"/>
        <constructor-arg ref="#{T(com.epam.spring.core.entity.Event).isDay() ? 'fileLogger' : 'eventLogger'}"/>
    </bean>
    <bean id="dateFormatter" class="java.text.DateFormat" factory-method="getDateTimeInstance"/>
    <bean id="statisticAspect" class="com.epam.spring.core.aspects.StatisticAspect"/>
    <bean id="logAspect" class="com.epam.spring.core.aspects.LoggingAspect"/>
    <bean id="consoleLoggerLimitAspect" class="com.epam.spring.core.aspects.ConsoleLoggerLimitAspect">
        <constructor-arg value="${console.logger.max:1}"/>
        <constructor-arg ref="fileLogger"/>
    </bean>

    <aop:config>
        <aop:aspect id="consoleLimitAspect" ref="consoleLoggerLimitAspect">

            <aop:pointcut id="consoleLogging"
                          expression="execution(* *.logEvent(com.epam.spring.core.entity.Event))
                &amp;&amp; within(com.epam.spring.core.utils.ConsoleEventLogger)
                &amp;&amp; args(evt)" />

            <aop:around pointcut-ref="consoleLogging" method="aroundLogEvent" arg-names="evt" />
        </aop:aspect>

    </aop:config>
</beans>